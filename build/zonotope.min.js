/*! zonotope 2014-10-21 */
function GeneratorsDataTable(a){this.generators=a,this.selection=d3.select("#generators").select("table"),this.numberFormatFn=function(a){return Number(a).toPrecision(4)},void 0===a[0].z?(this.tableHeaderData=["x","y","length"],this.generatorsDataFn=function(a){return[a.x,a.y,Geom2.norm(a)]}):(this.tableHeaderData=["x","y","z","length"],this.generatorsDataFn=function(a){return[a.x,a.y,a.z,Geom3.norm(a)]})}function svgPolygonData(a,b){var c,d,e=[];for(c=0;c<a.length;++c)d=Geom2.add(a[c],b),e.push(Geom2.str(d));var f=e.join(" ");return f}function d3DefineArrowhead(a,b,c){var d=1,e=2*d;return a.append("defs").append("marker").attr("id",b).attr("viewBox","0 0 "+e+" "+e).attr("refX",0).attr("refY",d).attr("markerUnits","strokeWidth").attr("markerWidth",c).attr("markerHeight",c).attr("orient","auto").append("path").attr("d","M 0 0 L "+e+" "+d+" L 0 "+e+" z")}function ZonogonSVG(a,b,c,d){this.svg=a,this.generators=b,this.offset=c,this.zonogon=zonogon(b),this.zonogonId=d||"zonogon",this.arrowheadIdDefault=d+"arrowhead-default",this.arrowheadIdActive=d+"arrowhead-active",this.arrowheadMarkerSize=3,this.arrowheadLength=3*this.arrowheadMarkerSize,this.arrowheadUrlDefault="url(#"+this.arrowheadIdDefault+")",this.arrowheadUrlActive="url(#"+this.arrowheadIdActive+")",this.arrowColorDefault="black",this.arrowColorActive="red",d3DefineArrowhead(this.svg,this.arrowheadIdDefault,this.arrowheadMarkerSize).attr("fill",this.arrowColorDefault),d3DefineArrowhead(this.svg,this.arrowheadIdActive,this.arrowheadMarkerSize).attr("fill",this.arrowColorActive),this.polygonStrokeColor="black",this.polygonStrokeWidth=2,this.polygonFill="none",this.polygonFillOpacity=1}function Zonotope3SVG(a,b,c){var d=this;d.canvasId=a,d.generators=b,d.degenerate=!!c,d.canvas=document.getElementById(a),d.width=100,d.height=100,d.scene=scene=new seen.Scene({fractionalPoints:!0,model:seen.Models.default(),viewport:seen.Viewports.center(d.width,d.height)}),d.context=seen.Context(d.canvasId,d.scene).render();var e=function(){var a=window.getComputedStyle(d.canvas);d.width=a.width,d.height=a.height,d.width=d.width.substr(0,d.width.length-2),d.height=d.height.substr(0,d.height.length-2),d.scene.viewport=seen.Viewports.center(d.width,d.height),d.context.render()};window.onresize=e,d.facetList=d.degenerate?zonotope3(b):zonotope3_GeneralPosition(b),d.shape=new seen.Shape("zonotope",d.facetList.map(function(a){var b=a.vertices.map(function(a){return new seen.Point(a.x,a.y,a.z)}),c=new seen.Surface(b);return Geom3.scale(1/Geom3.norm(a.normal),a),c.normal=a.normal,c})),d.shape.surfaces.forEach(function(a){var b=.5,c=1,d=function(a){return(1-b)*a+b};a.fill=new seen.Material(seen.Colors.rgb(255*d(a.normal.x),255*d(a.normal.y),255*d(a.normal.z),255*c)),a.fill.metallic=!1,a.fill.specularExponent=8}),d.scene.model.add(d.shape),d.animator=(new seen.Animator).onFrame(function(a,b){d.shape.rotx(3e-4*b).roty(2e-4*b),d.context.render()}),e()}function ZonotopeCanvas3(a,b,c,d,e,f,g){this.canvasId=d||"canvas-container",this.drawFacetOutlines=b||!1,this.parentElement=document.getElementById(this.canvasId),this.renderWidth=1920,this.renderHeight=1200,this.interactive=!1||g,this.generators=a,this.degenerate=c||!1,this.opacity=e||.75,this.transparent=this.opacity<=.99,this.linewidth=1,this.zonotope=c?zonotope3(this.generators):zonotope3_GeneralPosition(this.generators),this.sideLength=1}function randomGenerators(a,b,c,d){c=c||-1,d=d||1;for(var e=function(){return c+Math.random()*(d-c)},f=function(){var b={x:e(),y:e()};return 3==a&&(b.z=e()),b},g=[],h=0;b>h;++h)g[h]=f(),g[h].k=h;return g}function buildSingleAxis(a,b,c,d,e,f){var g,h=new THREE.Geometry;e=e||1,f=f||e,g=d?new THREE.LineDashedMaterial({linewidth:3,color:c,dashSize:e,gapSize:f}):new THREE.LineBasicMaterial({linewidth:3,color:c}),h.vertices.push(a.clone()),h.vertices.push(b.clone()),h.computeLineDistances();var i=new THREE.Line(h,g,THREE.LinePieces);return i}function buildAxesXYZ(a,b,c,d){var e=new THREE.Object3D;return b=b||16711680,c=c||65280,d=d||255,e.add(buildSingleAxis(new THREE.Vector3(0,0,0),new THREE.Vector3(a,0,0),b,!1)),e.add(buildSingleAxis(new THREE.Vector3(0,0,0),new THREE.Vector3(-a,0,0),b,!0)),e.add(buildSingleAxis(new THREE.Vector3(0,0,0),new THREE.Vector3(0,a,0),c,!1)),e.add(buildSingleAxis(new THREE.Vector3(0,0,0),new THREE.Vector3(0,-a,0),c,!0)),e.add(buildSingleAxis(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,a),d,!1)),e.add(buildSingleAxis(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,-a),d,!0)),e}function renderGeneratorArrows3D(a){for(var b=new THREE.Vector3(0,0,0),c=generators.length,d=0;c>d;++d){var e=generators[d],f=Geom3.norm(e);e=Geom3.scale(1/f,e);var g=new THREE.Vector3(e.x,e.y,e.z),h=0,i=new THREE.ArrowHelper(g,b,f,h);a.add(i)}}function zonogon(a){var b,c,d,e,f;for(b=[],d={x:0,y:0},e=0;e<a.length;++e)f=a[e],(f.y<0||0===f.y&&f.x<0)&&(d=Geom2.add(d,f)),b.push(f),b.push(Geom2.antipode(f));for(b.sort(Geom2.compareByAngle),c=[],e=0;e<b.length;++e)c.push(d),d=Geom2.add(d,b[e]);return c.push(c[0]),c}function zonotope3(a){var b,c,d,e,f,g,h,i,j,k=[],l=[],m=a.length;for(b=0;m>b;++b)for(l[b]=[],c=0;m>c;++c)l[b][c]=!1;for(b=0;m>b;++b){e=a[b];{Geom3.kernelBasis(e)}for(c=b+1;m>c;++c)if(!l[b][c]){if(l[b][c]=l[c][b]=!0,j=[b,c],h={},i={},f=a[c],h.normal=Geom3.crossProduct(e,f),0===h.normal.x&&0===h.normal.y&&0===h.normal.z)continue;for(i.normal=Geom3.antipode(h.normal),h.basis=i.basis=[e,f],h.offset={x:0,y:0,z:0},i.offset={x:0,y:0,z:0},h.generators=j,i.generators=j,d=0;m>d;++d)if(d!=b&&d!=c){g=a[d];var n=Geom3.dot(h.normal,g);if(n>0&&(h.offset=Geom3.add(h.offset,g)),0===n){if(b>d)break;j.push(d),Geom2.parallel(e,g)||(l[b][d]=l[d][b]=!0),Geom2.parallel(f,g)||(l[c][d]=l[d][c]=!0)}0>n&&(i.offset=Geom3.add(i.offset,g))}d==m&&(finalizeFacet3(h,a),finalizeFacet3(i,a),k.push(h),k.push(i),i.vertices.reverse())}}return k}function zonotope3_GeneralPosition(a){var b,c,d,e,f,g,h,i,j,k=[],l=a.length;for(b=0;l>b;++b){d=a[b];var m=b,n=[];for(g=Geom3.kernelBasis(d),i=[],j={x:0,y:0,z:0},c=0;l>c;++c)if(e=a[c],f={x:Geom3.dot(g[0],e),y:Geom3.dot(g[1],e),label:c,sign:1},0!==f.x||0!==f.y)(f.y<0||0===f.y&&f.x<0)&&(j=Geom3.add(j,e)),i.push(f),f={x:-f.x,y:-f.y,label:c,sign:-1},i.push(f);else if(n.push(c),m>c){m=c;break}if(!(b>m)){i.sort(Geom2.compareByAngle);for(var o=0;o<i.length;){f=i[o],c=f.label,e=Geom3.scale(f.sign,a[c]);var p=c,q=[c],r={x:0,y:0,z:0},s={x:0,y:0,z:0};for(1==f.sign&&(r=Geom3.add(r,e)),-1==f.sign&&(s=Geom3.add(s,e));o+1<i.length&&Geom2.parallel(i[o],i[o+1]);)f=i[++o],c=f.label,p>c&&(p=c),e=Geom3.scale(f.sign,a[c]),1==f.sign&&(r=Geom3.add(r,e)),-1==f.sign&&(s=Geom3.add(s,e)),q.push(c);j=Geom3.add(j,s),p>b&&(e=a[p],h={normal:Geom3.crossProduct(d,e),offset:j,generators:n.concat(q),basis:[d,e]},finalizeFacet3(h,a),k.push(h)),j=Geom3.add(j,r),++o}}}return k}function finalizeFacet3(a,b){a.vertices=[];var c,d,e,f=a.basis,g=[],h=a.offset;for(c=0;c<a.generators.length;++c)d=b[a.generators[c]],e={x:Geom3.dot(f[0],d),y:Geom3.dot(f[1],d),preimage:d},g.push(e),(e.y<0||0===e.y&&e.x<0)&&(h=Geom3.add(h,d)),e={x:-e.x,y:-e.y,preimage:Geom3.antipode(d)},g.push(e);for(g.sort(Geom2.compareByAngle),c=0;c<g.length;++c)a.vertices.push(h),h=Geom3.add(h,g[c].preimage);a.normal=Geom3.scale(1/Geom3.norm(a.normal),a.normal),Geom3.dot(a.vertices[0],a.normal)<0&&(a.normal=Geom3.antipode(a.normal),a.vertices.reverse())}function zonotopeGeometry3(a){var b,c,d,e,f=new THREE.Geometry,g=0;for(d=0;d<a.length;++d)for(b=a[d],e=0;e<b.vertices.length;++e)c=b.vertices[e],c.vertexListIndex=g,f.vertices.push(new THREE.Vector3(c.x,c.y,c.z)),e>=2&&f.faces.push(new THREE.Face3(b.vertices[0].vertexListIndex,b.vertices[e-1].vertexListIndex,b.vertices[e].vertexListIndex,new THREE.Vector3(b.normal.x,b.normal.y,b.normal.z))),++g;return f.mergeVertices(),f}function zonotopeVertices3(a){var b=[];a.forEach(function(a){a.vertices.forEach(function(a){b.push(a)})}),b.sort(function(a,b){if(a.x<b.x)return-1;if(a.x==b.x){if(a.y<b.y)return-1;if(a.y==b.y){if(a.z<b.z)return-1;if(a.z==b.z)return 0}}return 1});var c,d,e=[];for(c=0,d=0;c<b.length;){for(;d<b.length&&Geom3.equals(b[c],b[d]);)++d;e.push(b[c]),c=d}return e}function strFromVertexList3(a){return"["+a.map(Geom3.str).join(";\n")+"]"}GeneratorsDataTable.prototype.init=function(){this.selection.append("tr").attr("class","header").selectAll("th").data(this.tableHeaderData).enter().append("th").text(function(a){return a}),this.selection.selectAll("tr.data").data(this.generators).enter().append("tr").attr("class","data").attr("id",function(a){return"generator-tr-"+a.k}).selectAll("td").data(this.generatorsDataFn).enter().append("td").text(this.numberFormatFn)},GeneratorsDataTable.prototype.update=function(){this.selection.selectAll("tr.data").data(this.generators).selectAll("td").data(this.generatorsDataFn).text(this.numberFormatFn)},ZonogonSVG.prototype.drawPath=function(a,b,c){var d=d3.svg.line().x(function(a){return a.x+c.x}).y(function(a){return a.y+c.y}).interpolate("linear"),e=this.svg.append("path").attr("d",d(b)).style("stroke-width",3).attr("stroke","black").attr("fill","none").attr("id",a);return e},ZonogonSVG.prototype.drawPolygon=function(a,b,c){var d=this.svg.append("polygon").attr("points",svgPolygonData(b,c)).style("stroke-width",this.polygonStrokeWidth).style("stroke",this.polygonStrokeColor).attr("fill",this.polygonFill).attr("fill-opacity",this.polygonFillOpacity).attr("id",a);return d},ZonogonSVG.prototype.drawArrow=function(a,b,c){return this.drawPath(a,[b,c],{x:0,y:0}).attr("marker-end",this.arrowheadUrlDefault).attr("class","arrow").attr("stroke",this.arrowColorDefault)},ZonogonSVG.prototype.initGeneratorArrow=function(a,b,c){c=c||function(){};var d=this,e=d.generators,f=function(){var c=d.arrowheadLength,f=Geom2.norm(e[b]),g=c+f,h=Geom2.scale(f/g,e[b]);return Geom2.add(a,h)},g={};g.id="generator-"+b,g.origin=a,g.endpoint=f(),g.selection=this.drawArrow(g.id,a,g.endpoint),g.clickPadding=10,g.clickTargetId=g.id+"-target",g.clickTargetEndpoint=function(){var b=Geom2.dist(g.endpoint,g.origin),c=(b+g.clickPadding)/b;return{x:(g.endpoint.x-a.x)*c+a.x,y:(g.endpoint.y-a.y)*c+a.y}},g.clickTargetSelection=this.drawPath(g.clickTargetId,[a,g.clickTargetEndpoint()],{x:0,y:0}).style("opacity",0).style("stroke-width",10);var h=function(){g.selection.attr("stroke",d.arrowColorActive).attr("marker-end",d.arrowheadUrlActive)},i=function(){g.dragging||g.selection.attr("stroke",d.arrowColorDefault).attr("marker-end",d.arrowheadUrlDefault)};return g.clickTargetSelection.on("mouseover",h),g.clickTargetSelection.on("mouseout",i),g.dragging=!1,g.dragBehavior=d3.behavior.drag(),g.dragBehavior.on("drag",function(){e[b].x+=d3.event.dx,e[b].y+=d3.event.dy;var h=d3.svg.line().x(function(a){return a.x}).y(function(a){return a.y}).interpolate("linear");g.endpoint=f(),g.selection.attr("d",h([a,g.endpoint])),g.clickTargetSelection.attr("d",h([a,g.clickTargetEndpoint()])),d.zonogon=zonogon(e),d.redraw(),c()}),g.dragBehavior.on("dragstart",function(){g.dragging=!0,h()}),g.dragBehavior.on("dragend",function(){g.dragging=!1,i()}),g.clickTargetSelection.call(g.dragBehavior),g},ZonogonSVG.prototype.draw=function(){this.drawPolygon(this.zonogonId,this.zonogon,this.offset),this.zonogonSelection=d3.select("#"+this.zonogonId)},ZonogonSVG.prototype.redraw=function(){this.zonogonSelection.attr("points",svgPolygonData(this.zonogon,this.offset))},ZonotopeCanvas3.prototype.canvasWidth=function(){return this.parentElement.offsetWidth},ZonotopeCanvas3.prototype.canvasHeight=function(){return this.parentElement.offsetHeight},ZonotopeCanvas3.prototype.aspect=function(){return this.canvasWidth()/this.canvasHeight()},ZonotopeCanvas3.prototype.init=function(){var a,b,c,d,e={x:{min:0,max:0},y:{min:0,max:0},z:{min:0,max:0}};for(c=0;c<this.zonotope.length;++c)for(a=this.zonotope[c],d=0;d<a.vertices.length;++d)b=a.vertices[d],e.x.min=Math.min(e.x.min,b.x),e.x.max=Math.max(e.x.max,b.x),e.y.min=Math.min(e.y.min,b.y),e.y.max=Math.max(e.y.max,b.y),e.z.min=Math.min(e.z.min,b.z),e.z.max=Math.max(e.z.max,b.z);var f=[e.x.min,e.x.max,e.y.min,e.y.max,e.z.min,e.z.max].map(Math.abs),g=f.reduce(function(a,b){return a>=b?a:b}),h=g;if(this.camera=new THREE.PerspectiveCamera(75,this.aspect(),1,1e3),this.camera.position.set(h,-h,h),this.camera.up=new THREE.Vector3(0,0,1),this.camera.lookAt(new THREE.Vector3(0,0,0)),this.scene=new THREE.Scene,this.drawFacetOutlines){for(this.lineMaterial=new THREE.LineBasicMaterial({color:0,linewidth:this.linewidth}),this.lineObject3D=new THREE.Object3D,c=0;c<this.zonotope.length;++c){for(a=this.zonotope[c],a.lineGeometry=new THREE.Geometry,d=0;d<=a.vertices.length;++d)b=a.vertices[d%a.vertices.length],a.lineGeometry.vertices.push(new THREE.Vector3(b.x,b.y,b.z));a.lineMesh=new THREE.Line(a.lineGeometry,this.lineMaterial),this.lineObject3D.add(a.lineMesh)}this.scene.add(this.lineObject3D)}this.geometry=zonotopeGeometry3(this.zonotope),this.meshFrontNormalMaterial=new THREE.MeshNormalMaterial({side:THREE.FrontSide,transparent:this.transparent,opacity:this.opacity}),this.meshBackNormalMaterial=new THREE.MeshNormalMaterial({side:THREE.BackSide,transparent:this.transparent,opacity:this.opacity}),this.frontMesh=new THREE.Mesh(this.geometry,this.meshFrontNormalMaterial),this.backMesh=new THREE.Mesh(this.geometry,this.meshBackNormalMaterial),this.scene.add(this.frontMesh),this.scene.add(this.backMesh),this.renderer=new THREE.WebGLRenderer({antialias:!0}),this.renderer.setSize(this.canvasWidth(),this.canvasHeight()),this.renderer.setClearColor(16777215,0),this.parentElement.appendChild(this.renderer.domElement),window.addEventListener("resize",this.onWindowResize.bind(this),!1),this.interactive&&(this.controls=new THREE.TrackballControls(this.camera,this.parentElement),this.controls.rotateSpeed=1,this.controls.zoomSpeed=1,this.controls.panSpeed=.8,this.controls.noZoom=!1,this.controls.noPan=!1,this.controls.staticMoving=!0,this.controls.dynamicDampingFactor=.3)},ZonotopeCanvas3.prototype.animate=function(){window.requestAnimationFrame(this.animate.bind(this)),this.interactive&&this.controls.update(),this.renderer.render(this.scene,this.camera)},ZonotopeCanvas3.prototype.onWindowResize=function(){this.camera.aspect=this.aspect(),this.camera.updateProjectionMatrix(),this.renderer.setSize(this.canvasWidth(),this.canvasHeight())};var Geom2={parallel:function(a,b){return a.x*b.y==a.y*b.x},str:function(a){return a.x+","+a.y},equals:function(a,b){return a.x==b.x&&a.y==b.y},norm:function(a){return Math.sqrt(a.x*a.x+a.y*a.y)},dist:function(a,b){return Geom2.norm(Geom2.sub(a,b))},sub:function(a,b){return{x:a.x-b.x,y:a.y-b.y}},add:function(a,b){return{x:a.x+b.x,y:a.y+b.y}},scale:function(a,b){return{x:a*b.x,y:a*b.y}},antipode:function(a){return{x:-a.x,y:-a.y}},compareByAngle:function(a,b){return a.x==b.x&&a.y==b.y?0:0===a.y?a.x>=0?-1:b.y>=0?1:-1:0===b.y?b.x>=0?1:a.y>0?-1:1:a.y>0&&b.y<0?-1:a.y<0&&b.y>0?1:a.y*b.x<a.x*b.y?-1:1}},Geom3={equals:function(a,b){return a.x==b.x&&a.y==b.y&&a.z==b.z},norm:function(a){return Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z)},add:function(a,b){return{x:a.x+b.x,y:a.y+b.y,z:a.z+b.z}},sub:function(a,b){return{x:a.x-b.x,y:a.y-b.y,z:a.z-b.z}},scale:function(a,b){return{x:a*b.x,y:a*b.y,z:a*b.z}},antipode:function(a){return this.scale(-1,a)},crossProduct:function(a,b){return{x:a.y*b.z-a.z*b.y,y:a.z*b.x-a.x*b.z,z:a.x*b.y-a.y*b.x}},dot:function(a,b){return a.x*b.x+a.y*b.y+a.z*b.z},kernelBasis:function(a){var b=[];b[0]={x:1,y:0,z:0},b[1]={x:0,y:1,z:0},b[2]={x:0,y:0,z:1};var c,d=-1,e=[];for(c=0;3>c;++c)e[c]=Geom3.dot(b[c],a),0!==e[c]&&(d=c);if(-1==d)return b;var f;for(f=e[2],e[2]=e[d],e[d]=f,f=b[2],b[2]=b[d],b[d]=f,c=0;2>c;++c)b[c]=Geom3.sub(Geom3.scale(e[2],b[c]),Geom3.scale(e[c],b[2]));return b.pop(),b},str:function(a){return[a.x,a.y,a.z].join(",")}};